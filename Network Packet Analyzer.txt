from scapy.all import sniff, IP, TCP, UDP, ICMP, Raw

def process_packet(packet):
    if IP in packet:
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst
        proto = ip_layer.proto

        # Determine protocol name
        protocol_name = {
            6: "TCP",
            17: "UDP",
            1: "ICMP"
        }.get(proto, str(proto))

        print(f"\n Protocol: {protocol_name}")
        print(f" Source IP: {src_ip}")
        print(f" Destination IP: {dst_ip}")

        # Print payload if available
        if Raw in packet:
            payload = packet[Raw].load
            print(f" Payload (Hex): {payload.hex()[:100]}...")
        else:
            print(" No Payload")

print("[*] Starting packet sniffing (Press Ctrl+C to stop)...")
sniff(prn=process_packet, store=False)
